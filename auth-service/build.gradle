buildscript {
    ext {
        kotlinVersion = '1.1.51'
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        mavenCentral()
//        maven {
//            url 'https://repo.spring.io/libs-milestone'
//        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrai" +
                "" +
                "ns.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.uitnetwork'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Dalston.SR4'
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-oauth2')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile 'io.github.microutils:kotlin-logging:1.4.6'
    compile 'org.springframework.session:spring-session:1.3.1.RELEASE'
    compile 'org.springframework.session:spring-session-data-redis:1.3.1.RELEASE'
    compile 'biz.paluch.redis:lettuce:4.4.1.Final'

    runtime('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task cleanFrontEnd(type: Exec) {
    commandLine './scripts/front_end.sh'
    args 'clean'
}

task installFrontEnd(type: Exec) {
    commandLine './scripts/front_end.sh'
    args 'install'
}

task buildFrontEnd(type: Exec) {
    commandLine './scripts/front_end.sh'
    args 'build'
}

bootRepackage.dependsOn buildFrontEnd
